/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package book4u;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Frame;
import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.JTabbedPane;
import javax.swing.JTextPane;
import java.awt.Toolkit;
import java.awt.image.BufferedImage;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;

/**
 *
 * @author 桌電
 */
public class mainFrame extends javax.swing.JFrame {

    int pageSum = 10;
    public EditPanel text;
    centerPanelList propertyList;
    PicFrameEdit photoAndBorder;

    /**
     * Creates new form main
     */
    public mainFrame() {

        //this.setAlwaysOnTop(true);
        propertyList = new centerPanelList(this);
        propertyList.init(pageSum);
        initComponents();
        JTabbedPane edit = new JTabbedPane();
        JPanel photoFrame = new JPanel();
        JPanel photoEdit = new JPanel();
        JPanel textEdit = new JPanel();
        edit.addTab("框架編輯", photoFrame);
        edit.addTab("圖片編輯", photoEdit);
        edit.addTab("文字編輯", textEdit);
        //加入文字編輯panel
        textEdit.setBackground(new Color(98, 134, 167));
        text = new EditPanel(this);
        textEdit.add(text);
        //加入圖片編輯panel
        photoAndBorder = new PicFrameEdit();
        photoEdit.setBackground(new Color(98, 134, 167));
        photoEdit.add(photoAndBorder.imageEditPanel());
        //加入框架編輯panel
        photoFrame.setBackground(new Color(98, 134, 167));
        photoFrame.add(photoAndBorder.borderEditPanel());
        rightPanel.add(edit, BorderLayout.EAST);
        Toolkit tk = Toolkit.getDefaultToolkit();
        this.setLocation(100, 100);
        this.setSize(1090, 780);
    }

    public void setCenterPanel(centerPanel panel) {
        remove(centerPanel);
        centerPanel = panel;
        centerPanel.setLocation(190, 160);
        add(centerPanel);
        updataScreenShot();
        centerPanel.updateUI();
    }

    public centerPanel getCenterPanel() {
        return (centerPanel) centerPanel;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        SouthPanel  com = new SouthPanel ();
        bottomPanel = com.addSouthPanel ( );
        leftPanel left=new leftPanel ();
        leftPanel = left.addLeftPanel ( );
        centerPanel = propertyList.getElement(1);
        rightPanel = new javax.swing.JPanel();
        menuPanel = new javax.swing.JPanel();
        hotListSave = new javax.swing.JButton();
        hotListPrevious = new javax.swing.JButton();
        hotListNext = new javax.swing.JButton();
        hotListPageAdd = new javax.swing.JButton();
        hotListPageDelete = new javax.swing.JButton();
        UpPanel upPanel = new UpPanel();
        topPanel = upPanel.UpPanel(this);
        menuBar = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        storeProjectMenuItem = new javax.swing.JMenuItem();
        openProjectMenuItem = new javax.swing.JMenuItem();
        jSeparator3 = new javax.swing.JPopupMenu.Separator();
        outputPDFmemuItem = new javax.swing.JMenuItem();
        editMenu = new javax.swing.JMenu();
        cutMenu = new javax.swing.JMenuItem();
        copyMenu = new javax.swing.JMenuItem();
        pasteMenu = new javax.swing.JMenuItem();
        deleteMenu = new javax.swing.JMenuItem();
        insertMenu = new javax.swing.JMenu();
        pictureFrameMenu = new javax.swing.JMenuItem();
        textBoxMenu = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Book4U");
        setBounds(new java.awt.Rectangle(0, 0, 0, 0));
        setResizable(false);
        getContentPane().setLayout(null);

        bottomPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        bottomPanel.setMaximumSize(new java.awt.Dimension(800, 500));
        bottomPanel.setPreferredSize(new java.awt.Dimension(800, 200));
        getContentPane().add(bottomPanel);
        bottomPanel.setBounds(0, 560, 1090, 176);

        leftPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        leftPanel.setPreferredSize(new java.awt.Dimension(150, 300));
        getContentPane().add(leftPanel);
        leftPanel.setBounds(0, 0, 191, 560);

        centerPanel panel = (centerPanel) centerPanel;
        panel.mainFrame = this;
        centerPanel.setBackground(new java.awt.Color(255, 255, 255));
        centerPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        centerPanel.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        getContentPane().add(centerPanel);
        centerPanel.setBounds(190, 160, 650, 400);

        rightPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        getContentPane().add(rightPanel);
        rightPanel.setBounds(840, 0, 250, 560);
        rightPanel.setBackground(new Color(98, 134, 167));

        menuPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        menuPanel.setLayout(null);

        hotListSave.setText("儲存");
        hotListSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hotListSaveActionPerformed(evt);
            }
        });
        menuPanel.add(hotListSave);
        hotListSave.setBounds(0, 0, 100, 40);

        hotListPrevious.setText("上一頁");
        hotListPrevious.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hotListPreviousActionPerformed(evt);
            }
        });
        menuPanel.add(hotListPrevious);
        hotListPrevious.setBounds(110, 0, 100, 40);

        hotListNext.setText("下一頁");
        hotListNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hotListNextActionPerformed(evt);
            }
        });
        menuPanel.add(hotListNext);
        hotListNext.setBounds(220, 0, 90, 40);

        hotListPageAdd.setText("頁面增加");
        hotListPageAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hotListPageAddActionPerformed(evt);
            }
        });
        menuPanel.add(hotListPageAdd);
        hotListPageAdd.setBounds(320, 0, 90, 40);

        hotListPageDelete.setText("頁面刪除");
        hotListPageDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hotListPageDeleteActionPerformed(evt);
            }
        });
        menuPanel.add(hotListPageDelete);
        hotListPageDelete.setBounds(420, 0, 90, 40);

        getContentPane().add(menuPanel);
        menuPanel.setBounds(190, 110, 650, 50);
        getContentPane().add(topPanel);
        topPanel.setBounds(190, 0, 650, 110);

        fileMenu.setText("檔案");

        storeProjectMenuItem.setText("儲存");
        storeProjectMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                storeProjectMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(storeProjectMenuItem);

        openProjectMenuItem.setText("開啟");
        openProjectMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openProjectMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(openProjectMenuItem);
        fileMenu.add(jSeparator3);

        outputPDFmemuItem.setText("輸出PDF");
        outputPDFmemuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                outputPDFmemuItemActionPerformed(evt);
            }
        });
        fileMenu.add(outputPDFmemuItem);

        menuBar.add(fileMenu);

        editMenu.setText("編輯");

        cutMenu.setText("剪下");
        cutMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cutMenuActionPerformed(evt);
            }
        });
        editMenu.add(cutMenu);

        copyMenu.setText("複製");
        editMenu.add(copyMenu);

        pasteMenu.setText("貼上");
        pasteMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pasteMenuActionPerformed(evt);
            }
        });
        editMenu.add(pasteMenu);

        deleteMenu.setText("刪除");
        deleteMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteMenuActionPerformed(evt);
            }
        });
        editMenu.add(deleteMenu);

        menuBar.add(editMenu);

        insertMenu.setText("插入");

        pictureFrameMenu.setText("圖框");
        pictureFrameMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pictureFrameMenuActionPerformed(evt);
            }
        });
        insertMenu.add(pictureFrameMenu);

        textBoxMenu.setText("文字框");
        textBoxMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textBoxMenuActionPerformed(evt);
            }
        });
        insertMenu.add(textBoxMenu);

        menuBar.add(insertMenu);

        setJMenuBar(menuBar);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void storeProjectMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_storeProjectMenuItemActionPerformed
        propertyList.set((centerPanel) centerPanel);
        propertyList.store();
    }//GEN-LAST:event_storeProjectMenuItemActionPerformed

    private void outputPDFmemuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_outputPDFmemuItemActionPerformed
        propertyList.outputPDF();
    }//GEN-LAST:event_outputPDFmemuItemActionPerformed

    private void cutMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cutMenuActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cutMenuActionPerformed

    private void pictureFrameMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pictureFrameMenuActionPerformed
        pictureFrameMenuActionPerformed();
    }//GEN-LAST:event_pictureFrameMenuActionPerformed

    private void pasteMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pasteMenuActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pasteMenuActionPerformed

    private void textBoxMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textBoxMenuActionPerformed
        textBoxMenuActionPerformed();
    }//GEN-LAST:event_textBoxMenuActionPerformed

    private void deleteMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteMenuActionPerformed
        centerPanel centerP = (centerPanel) centerPanel;
        centerP.delete();
    }//GEN-LAST:event_deleteMenuActionPerformed

    private void hotListSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hotListSaveActionPerformed
        propertyList.set((centerPanel) centerPanel);
        propertyList.store();
    }//GEN-LAST:event_hotListSaveActionPerformed

    private void hotListNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hotListNextActionPerformed
        centerPanel page = (centerPanel) centerPanel;
        //page.page = testint;
        if (page.page == pageSum) {
            return;
        }
        propertyList.set(page);
        //testint++;
        //centerPanel = null;    
        //centerPanel.removeAll();
        //centerPanel.updateUI();
        remove(centerPanel);
        centerPanel = propertyList.getElement(page.page + 1);
        centerPanel.setLocation(190, 160);
        add(centerPanel);
        updataScreenShot();
        //System.out.println(centerPanel.getComponentCount());
        centerPanel.updateUI();
    }//GEN-LAST:event_hotListNextActionPerformed

    private void hotListPageAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hotListPageAddActionPerformed
        System.out.println(propertyList.getSize());
        centerPanel p = new centerPanel(this);
        p.setLocation(0, 0);
        p.setSize(650, 400);
        p.page = propertyList.getSize() + 1;
        p.setBackground(new java.awt.Color(255, 255, 255));
        propertyList.add(p);
        pageSum++;
        updataScreenShot();
        centerPanel.updateUI();
    }//GEN-LAST:event_hotListPageAddActionPerformed

    private void hotListPageDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hotListPageDeleteActionPerformed
        System.out.println(propertyList.getSize());
        if (propertyList.getSize() == 1) {
            remove(centerPanel);
            propertyList.remove(1);
            propertyList.init(1);
            centerPanel = propertyList.getElement(1);
            add(centerPanel);
            this.repaint();
            updataScreenShot();
            return;
        }
        centerPanel page = (centerPanel) centerPanel;
        int displaypage = page.page;
        if (page.page == propertyList.getSize()) {
            displaypage--;
        }
        propertyList.remove(page.page);
        pageSum--;
        remove(centerPanel);
        centerPanel = propertyList.getElement(displaypage);
        centerPanel.setLocation(190, 160);
        add(centerPanel);
        updataScreenShot();
        centerPanel.updateUI();
    }//GEN-LAST:event_hotListPageDeleteActionPerformed

    private void openProjectMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openProjectMenuItemActionPerformed
        propertyList.open();
        remove(centerPanel);
        centerPanel = propertyList.getElement(1);
        add(centerPanel);
        this.updataScreenShot();
        centerPanel.updateUI();
    }//GEN-LAST:event_openProjectMenuItemActionPerformed

    private void hotListPreviousActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hotListPreviousActionPerformed
        centerPanel page = (centerPanel) centerPanel;
        if (page.page == 1) {
            return;
        }
        //page.page = testint;
        propertyList.set(page);
        //testint--;
        //centerPanel = null;
        remove(centerPanel);
        centerPanel = propertyList.getElement(page.page - 1);
        centerPanel.setLocation(190, 160);
        add(centerPanel);
        //System.out.println(centerPanel.getComponentCount());
        //JFrame ff= new JFrame();
        //ff.add(centerPanel);
        //ff.setVisible(true);
        //ff.setSize(300,400);
        updataScreenShot();
        centerPanel.updateUI();
    }//GEN-LAST:event_hotListPreviousActionPerformed

    public void updataScreenShot() //更新 上面panel
    {
        if (centerPanel != null) {
            centerPanel page = (centerPanel) centerPanel;
            propertyList.set(page);
        }
        UpPanel panel = new UpPanel();
        remove(topPanel);
        topPanel = panel.UpPanel(this);
        getContentPane().add(topPanel);
        topPanel.setBounds(190, 0, 650, 110);

    }

    public void pictureFilePathActionPerformed(String path, JPanel panel) {
        for (Component c : panel.getComponents()) {
            if (c instanceof labelStore) {
                BufferedImage temp = ((labelStore) c).getBufferedImage();
                photoAndBorder.call(panel, path, temp, this);
            }
        }
    }

    public void pictureFrameMenuActionPerformed() {
        centerPanel centerP = (centerPanel) centerPanel;
        JPanel panel = centerP.insertInitialPictureFrame(); // 圖片的panel 
    }

    public void textBoxMenuActionPerformed() {
        centerPanel centerP = (centerPanel) centerPanel;
        JTextPane p = centerP.insertInitialTextArea();  //文字框add到我的centerPanel
        text.call(centerP, p); //這行加入到你的  刪除這行可正常顯示
    }

    /**
     * @param args the command line arguments
     */
    public void openFile() {
        propertyList.open();
        centerPanel = propertyList.getElement(1);
        centerPanel panel = (centerPanel) centerPanel;
        panel.mainFrame = this;
        this.setVisible(true);

    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel bottomPanel;
    private javax.swing.JPanel centerPanel;
    private javax.swing.JMenuItem copyMenu;
    private javax.swing.JMenuItem cutMenu;
    private javax.swing.JMenuItem deleteMenu;
    private javax.swing.JMenu editMenu;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JButton hotListNext;
    private javax.swing.JButton hotListPageAdd;
    private javax.swing.JButton hotListPageDelete;
    private javax.swing.JButton hotListPrevious;
    private javax.swing.JButton hotListSave;
    private javax.swing.JMenu insertMenu;
    private javax.swing.JPopupMenu.Separator jSeparator3;
    private javax.swing.JPanel leftPanel;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JPanel menuPanel;
    private javax.swing.JMenuItem openProjectMenuItem;
    private javax.swing.JMenuItem outputPDFmemuItem;
    private javax.swing.JMenuItem pasteMenu;
    private javax.swing.JMenuItem pictureFrameMenu;
    private javax.swing.JPanel rightPanel;
    private javax.swing.JMenuItem storeProjectMenuItem;
    private javax.swing.JMenuItem textBoxMenu;
    private javax.swing.JScrollPane topPanel;
    // End of variables declaration//GEN-END:variables
}
